{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nlet score = 0;\n\nlet board = new Array(4)\n  .fill(null)\n  .map(el => [0, 0, 0, 0]);\n\nconst rows = 4;\nconst columns = 4;\n\nconst button = document.querySelector('button');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerText = 'Restart';\n\n    messageStart.classList.add('hidden');\n  } else if (button.classList.contains('restart')) {\n    board = new Array(4)\n      .fill(null)\n      .map(el => [0, 0, 0, 0]);\n\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    score = 0;\n  }\n  setGame();\n  setGame();\n  updateGame();\n});\n\nfunction setGame() {\n  const emptyTiles = [];\n\n  board.forEach((row, rowIndex) => {\n    row.forEach((cell, cellIndex) => {\n      if (cell === 0) {\n        emptyTiles.push([rowIndex, cellIndex]);\n      }\n    });\n  });\n\n  if (!emptyTiles.length) {\n    return;\n  }\n\n  const randomizer = (Math.random() <= 0.1) ? 4 : 2;\n  const [rowI, cellI]\n        = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n  board[rowI][cellI] = randomizer;\n\n  isGameOver();\n}\n\nfunction isGameOver() {\n  const anyEmptyField = board.some(row => row.some(cell => cell === 0));\n\n  if (anyEmptyField) {\n    return;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns - 1; c++) {\n      if (board[r][c] === board[r][c + 1]\n                || board[c][r] === board[c + 1][r]) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n}\n\nfunction updateGame() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        table.rows[r].cells[c].innerText = '';\n        table.rows[r].cells[c].className = 'field-cell';\n      } else {\n        table.rows[r].cells[c].innerHTML = board[r][c];\n        table.rows[r].cells[c].classList.add(`field-cell--${board[r][c]}`);\n      }\n    }\n  }\n\n  isGameOver();\n  document.querySelector('.game-score').innerText = score;\n};\n\nfunction clearZero(row) {\n  return row.filter(r => r !== 0);\n}\n\nfunction slide(row) {\n  let toMergeRow = clearZero(row);\n\n  for (let i = 0; i < toMergeRow.length - 1; i++) {\n    if (toMergeRow[i] === toMergeRow[i + 1]) {\n      toMergeRow[i] *= 2;\n      toMergeRow[i + 1] = 0;\n      score += toMergeRow[i];\n    }\n  }\n\n  toMergeRow = clearZero(toMergeRow);\n\n  while (toMergeRow.length < rows) {\n    toMergeRow.push(0);\n  }\n\n  return toMergeRow;\n};\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.code) {\n    case 'ArrowLeft':\n      moveHorizontal(false);\n      break;\n\n    case 'ArrowRight':\n      moveHorizontal(true);\n      break;\n\n    case 'ArrowUp':\n      moveVertical(false);\n\n      break;\n\n    case 'ArrowDown':\n      moveVertical(true);\n      break;\n  }\n\n  setGame();\n  setGame();\n  updateGame();\n});\n\nfunction moveHorizontal(isItRight) {\n  for (let i = 0; i < rows; i++) {\n    let row = board[i];\n\n    if (isItRight) {\n      row.reverse();\n    }\n    row = slide(row);\n\n    if (isItRight) {\n      board[i] = row.reverse();\n    } else {\n      board[i] = row;\n    }\n  }\n};\n\nfunction moveVertical(isItDown) {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    if (isItDown) {\n      row.reverse();\n      row = slide(row);\n      row.reverse();\n    } else {\n      row = slide(row);\n    }\n    board[0][c] = row[0];\n    board[1][c] = row[1];\n    board[2][c] = row[2];\n    board[3][c] = row[3];\n\n    for (let i = 0; i < rows; i++) {\n      board[i][c] = row[i];\n    };\n  }\n};\n"],"names":["table","document","querySelector","score","board","Array","fill","map","el","rows","columns","button","messageLose","messageWin","messageStart","setGame","emptyTiles","forEach","row","rowIndex","cell","cellIndex","push","length","randomizer","Math","random","ref","_slicedToArray","floor","rowI","cellI","isGameOver","some","r","c","classList","remove","updateGame","cells","innerText","className","innerHTML","add","concat","clearZero","filter","slide","toMergeRow","i","moveHorizontal","isItRight","reverse","moveVertical","isItDown","addEventListener","contains","e","code"],"version":3,"file":"index.2ca06b65.js.map"}